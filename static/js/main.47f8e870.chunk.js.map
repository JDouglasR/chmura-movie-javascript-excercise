{"version":3,"sources":["components/Header.js","components/Item.js","components/List.js","components/Body.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","defaultProps","Item","movie","actor","movies","actors","style","color","paddingTop","marginRight","name","List","goalArr","forEach","goalObject","Name","KRmovies","NCmovies","krMovies","Object","create","filter","mov","includes","ncMovies","console","log","push","map","actorId","movieId","Body","paddingBottom","Footer","App","useState","setMovies","setActors","useEffect","a","axios","get","headers","mode","then","response","data","catch","e","error","getMovies","getActors","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47f8e870.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Movies JavaScript Excercise\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import { MdLocalMovies } from \"react-icons/md\";\r\n\r\nconst Item = ({ movie, movies, actors, actor }) => {\r\n  return (\r\n    <div className=\"item\">\r\n      <h3>\r\n        <MdLocalMovies\r\n          style={{\r\n            color: \"steelblue\",\r\n            paddingTop: \"6px\",\r\n            marginRight: \"5px\",\r\n          }}\r\n        />\r\n        {actor ? actor.name : movie.title}\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import Item from \"./Item\";\r\n\r\nconst List = ({ movies, actors }) => {\r\n  let goalArr = [];\r\n\r\n  // for each actor in Actors API response\r\n  actors.forEach(() => {\r\n    // object for individual actors\r\n    const goalObject = {\r\n      Name: \"\",\r\n      KRmovies: [],\r\n      NCmovies: [],\r\n    };\r\n\r\n    const newObj = Object.create(goalObject);\r\n\r\n    // returns an array of Keanu Reeves movies\r\n    const krMovies = movies.filter((mov) => {\r\n      if (mov.actors.includes(115)) return mov;\r\n    });\r\n    // returns an array of Nicolas Cage movies\r\n    const ncMovies = movies.filter((mov) => {\r\n      if (mov.actors.includes(206)) return mov;\r\n    });\r\n\r\n    console.log(\"krMovies\", krMovies);\r\n    console.log(\"ncMovies\", ncMovies);\r\n    //   console.log(\"goalObject\", goalObject);\r\n\r\n    // function onlyUnique(value, index, self) {\r\n    //   return self.indexOf(value) === index;\r\n    // }\r\n    // let test = [];\r\n    // for (let i = 0; i < krMovies.length; i++) {\r\n    //   for (let j = 0; j < ncMovies.length; j++) {\r\n    //     if (krMovies[i].actors[i] === ncMovies[j].actors[j]) {\r\n    //       test.push(krMovies[i].actors[i]);\r\n    //     }\r\n    //   }\r\n    // }\r\n    // let test2 = test.filter(onlyUnique);\r\n    // console.log(\"test2\", test2);\r\n\r\n    // for each Keanu Reeve movie...\r\n    krMovies.forEach((movie) => {\r\n      if (movie.actors) {\r\n        // push movie title to goalObject\r\n        goalObject.KRmovies.push(movie.title);\r\n      }\r\n      // for each actor in a Keanu Reeve movie...\r\n      movie.actors.forEach((actor) => {\r\n        if (!actor === 115) {\r\n          // push acter to goalObject\r\n          goalObject.Name.push(actor);\r\n        }\r\n      });\r\n    });\r\n\r\n    // for each Nicolas Cage movie...\r\n    ncMovies.forEach((movie) => {\r\n      if (!movie.actors === 115) {\r\n        // push movie title to goalObject\r\n        goalObject.NCmovies.push(movie.title);\r\n      }\r\n      // for each actor in a Nicolas Cage movie...\r\n      movie.actors.forEach((actor) => {\r\n        if (!actor === 115) {\r\n          // push acter to goalObject\r\n          goalObject.Name.push(actor);\r\n        }\r\n      });\r\n    });\r\n    // push goalObject to goalArr\r\n    goalArr.push(goalObject);\r\n    console.log(\"goalArr\", goalArr);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>\r\n          {actors.map((actor) => (\r\n            <Item key={actor.actorId} actor={actor} />\r\n          ))}\r\n        </li>\r\n        <li>\r\n          {movies.map((movie) => (\r\n            <Item key={movie.movieId} movie={movie} />\r\n          ))}\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import List from './List';\r\n\r\n\r\nconst Body = ({ movies, actors }) => {\r\n  return <div>\r\n      <h3 style={{paddingBottom: '10px'}}>This is a list of actors who have been in movies with both Keanu Reeves and Nicolas Cage:</h3>\r\n      <List movies={movies} actors={actors}/>\r\n  </div>;\r\n};\r\n\r\nexport default Body;\r\n","import { CgCopyright } from \"react-icons/cg\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <footer>\r\n        Justin Roose{\" \"}\r\n        <CgCopyright style={{ color: \"steelblue\", paddingTop: \"6px\" }} /> 2021\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  //   // Set state for test response\n  //   const [finishedArr, setFinishedArr] = useState([]);\n\n  //   // Post to test final answer\n  //   useEffect(() => {\n  //     // POST request using axios inside useEffect React hook\n  //     Axios.get(\"/validation\", {\n  //         headers: { \"x-chmura-cors\": \"9cfa0794-b3a8-419d-a83d-04c52ab5cb93\" },\n  //         mode: \"cors\",\n  //       })\n  //         .then(response => setFinishedArr(response.data));\n  // }, []);\n\n  // Set state for Movies\n  const [movies, setMovies] = useState([]);\n\n  // Set state for Actors\n  const [actors, setActors] = useState([]);\n\n  //   useEffect(() => {\n  //     Axios.all([\n  //       Axios.get(\"/movies\"),\n  //       Axios.get(\"/actors\"),\n  //       {\n  //         headers: { \"x-chmura-cors\": \"9cfa0794-b3a8-419d-a83d-04c52ab5cb93\" },\n  //         mode: \"cors\",\n  //       },\n  //     ]).then(\n  //       Axios.spread((moviesAPI, actorsAPI) => {\n  //         const movies = moviesAPI.data;\n  //         setMovies(movies);\n\n  //         const actors = actorsAPI.data;\n  //         setActors(actors);\n  //       })\n  //     );\n  //   }, []);\n\n  // GET request for API for Movies\n  useEffect(() => {\n    async function getMovies() {\n      await axios\n        .get(\"/movies\", {\n          headers: { \"x-chmura-cors\": \"9cfa0794-b3a8-419d-a83d-04c52ab5cb93\" },\n          mode: \"cors\",\n        })\n        .then((response) => {\n          setMovies(response.data);\n        })\n        .catch((e) => {\n          console.error(\"axios movies error\", e);\n        });\n    }\n\n    getMovies();\n\n    async function getActors() {\n      await axios\n        .get(\"/actors\", {\n          headers: { \"x-chmura-cors\": \"9cfa0794-b3a8-419d-a83d-04c52ab5cb93\" },\n          mode: \"cors\",\n        })\n        .then((response) => {\n          setActors(response.data);\n        })\n        .catch((e) => {\n          console.error(\"axios actors error\", e);\n        });\n    }\n\n    getActors();\n  }, []);\n\n  //   // Get request for API to Actors\n  //   useEffect(() => {\n\n  //   }, []);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Body movies={movies} actors={actors} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}